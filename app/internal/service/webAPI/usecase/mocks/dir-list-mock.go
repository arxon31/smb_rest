// Code generated by MockGen. DO NOT EDIT.
// Source: dir-list.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "git.spbec-mining.ru/arxon31/sambaMW/internal/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockDirectoriesViewer is a mock of DirectoriesViewer interface.
type MockDirectoriesViewer struct {
	ctrl     *gomock.Controller
	recorder *MockDirectoriesViewerMockRecorder
}

// MockDirectoriesViewerMockRecorder is the mock recorder for MockDirectoriesViewer.
type MockDirectoriesViewerMockRecorder struct {
	mock *MockDirectoriesViewer
}

// NewMockDirectoriesViewer creates a new mock instance.
func NewMockDirectoriesViewer(ctrl *gomock.Controller) *MockDirectoriesViewer {
	mock := &MockDirectoriesViewer{ctrl: ctrl}
	mock.recorder = &MockDirectoriesViewerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDirectoriesViewer) EXPECT() *MockDirectoriesViewerMockRecorder {
	return m.recorder
}

// ListDir mocks base method.
func (m *MockDirectoriesViewer) ListDir(ctx context.Context, dirPath string, recursive bool) (entity.FileNode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDir", ctx, dirPath, recursive)
	ret0, _ := ret[0].(entity.FileNode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDir indicates an expected call of ListDir.
func (mr *MockDirectoriesViewerMockRecorder) ListDir(ctx, dirPath, recursive interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDir", reflect.TypeOf((*MockDirectoriesViewer)(nil).ListDir), ctx, dirPath, recursive)
}
